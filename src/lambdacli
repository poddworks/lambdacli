#!/usr/bin/env node
import program from "commander";

import ENV from "./environment";
import { create } from "./create";
import { update } from "./update";
import { cron } from "./cron";
import { deploy } from "./deploy";

program.version(require("../package.json").version);

program.
    command("create <functionPrefix>").
    description("Create a project `here` for a new AWS Lambda").
    action(function (functionPrefix, opts) {
        create(functionPrefix, opts);
    });

program.
    command("update <handlerName>").
    description("Add/Update handler configuration to AWS Lambda").
    action(function (handlerName, opts) {
        ENV.load();
        update(handlerName, opts);
    });

program.
    command("cron <ruleName>").
    description("Setup cron scheduled job via AWS CloudWatch Event").
    action(function (ruleName, opts) {
        ENV.load();
        cron(ruleName, opts);
    });

program.
    command("deploy.clean").
    description("Clear and Destroy Lambda bundle").
    action(function (opts) {
        ENV.load();
        deploy("", opts).clean();
    });

program.
    command("deploy.dev <handlerName>").
    description("Bundle and deploy Lambda function for Latest").
    action(function (handlerName, opts) {
        ENV.load();
        deploy(handlerName, opts).dev();
    });

program.
    command("deploy.prod <handlerName>").
    description("Bundle and deploy Lambda function for Production").
    action(function (handlerName, opts) {
        ENV.load();
        deploy(handlerName, opts).prod();
    });

program.
    command("info").
    description("Show information about configuration").
    action(function (opts) {
        ENV.load();
        if (ENV.config.handler.length) {
            console.log(JSON.stringify(ENV.config.handler, null, "  "));
        }
        if (ENV.config.trigger.length) {
            console.log(JSON.stringify(ENV.config.trigger, null, "  "));
        }
    });

program.parse(process.argv);
